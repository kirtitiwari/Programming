import java.io.*;
import java.util.*;

/*
 * To execute Java, please define "static void main" on a class
 * named Solution.
 *
 * If you need more classes, simply define them inline.
 */
class LinkedList{
    private Node head;
    private Node tail;
  
    public LinkedList(){
        this.head = new Node("head");
        tail = head;
    }
  
    public Node head(){
        return head;
    }
  
    public void add(Node node){
        tail.next = node;
        tail = node;
    }
  
    public static class Node{
        private Node next;
        private String data;

        public Node(String data){
            this.data = data;
        }
      
        public String data() {
            return data;
        }

        public void setData(String data) {
            this.data = data;
        }

        public Node next() {
            return next;
        }

        public void setNext(Node next) {
            this.next = next;
        }
      
        public String toString(){
            return this.data;
        }
    }
}

class Solution {
public static void main(String args[]) {
        //creating LinkedList with 5 elements including head
      LinkedList linkedList = new LinkedList();
      
      linkedList.add( new LinkedList.Node("1"));
      linkedList.add( new LinkedList.Node("6"));
      linkedList.add( new LinkedList.Node("3"));
      linkedList.add( new LinkedList.Node("4"));
   mlength(linkedList);
  int length = len(linkedList);
  System.out.print(" lenght" + "" + length);
}
  
  //finding middle elementht of LinkedList in single pass
  public static void mlength(LinkedList linkedList){
    LinkedList.Node head = linkedList.head();
      LinkedList.Node current = head;
      int length = 0;
      LinkedList.Node middle = head;
    
      while(current.next() != null){
          length++;
          if(length%2 ==0){
              middle = middle.next();
          }
          current = current.next();
      }
    
      if(length%2 == 1){
          middle = middle.next();
      }

      System.out.println("length of LinkedList: " + length);
      System.out.println("middle element of LinkedList : " + middle);
  
      
    } 
  
  /* length */
  public static int len(LinkedList linkedList){
    int count =0;
    LinkedList.Node head = linkedList.head();
    LinkedList.Node current = head;

   while(current.next() !=null ) {
      count++;
      current = current.next();
    } 
    return count;
  }
 
  
}
